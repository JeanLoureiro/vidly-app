{"ast":null,"code":"import _toConsumableArray from \"/Users/tcc-jean/sites/study/react/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/tcc-jean/sites/study/react/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/tcc-jean/sites/study/react/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tcc-jean/sites/study/react/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tcc-jean/sites/study/react/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tcc-jean/sites/study/react/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tcc-jean/sites/study/react/vidly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tcc-jean/sites/study/react/vidly/src/components/movies.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getMovies, deleteMovie } from \"../services/fakeMovieService\";\nimport MoviesTable from './moviesTable';\nimport Pagination from \"./common/pagination\";\nimport ListGroup from \"./common/listGroup\";\nimport { paginate } from '../utils/paginate';\nimport { getGenres } from '../services/fakeGenreService';\nimport _ from 'lodash';\nimport SearchBox from './searchBox';\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: [],\n      genres: [],\n      pageSize: 4,\n      currentPage: 1,\n      selectedGenre: '',\n      searchQuery: '',\n      sortColumn: {\n        path: 'title',\n        order: 'asc'\n      }\n    };\n\n    _this.handleDelete = function (id) {\n      var deletedMovie = deleteMovie(id);\n\n      _this.setState({\n        movie: deletedMovie\n      });\n    };\n\n    _this.handleLike = function (id) {\n      var movies = _this.state.movies.map(function (movie) {\n        return movie._id === id ? _objectSpread({}, movie, {\n          liked: !movie.liked\n        }) : movie;\n      });\n\n      _this.setState({\n        movies: movies\n      });\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n    };\n\n    _this.handleGenreSelect = function (genre) {\n      _this.setState({\n        selectedGenre: genre,\n        searchQuery: \"\",\n        currentPage: 1\n      });\n    };\n\n    _this.handleSearch = function (query) {\n      _this.setState({\n        selectedGenre: null,\n        searchQuery: query,\n        currentPage: 1\n      });\n    };\n\n    _this.handleSort = function (sortColumn) {\n      _this.setState({\n        sortColumn: sortColumn\n      });\n    };\n\n    _this.getPagedData = function () {\n      var _this$state = _this.state,\n          allMovies = _this$state.movies,\n          pageSize = _this$state.pageSize,\n          currentPage = _this$state.currentPage,\n          selectedGenre = _this$state.selectedGenre,\n          sortColumn = _this$state.sortColumn;\n      var filtered = selectedGenre && selectedGenre._id ? allMovies.filter(function (m) {\n        return m.genre._id === selectedGenre._id;\n      }) : allMovies;\n\n      var sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      var movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var genres = [{\n        _id: '',\n        name: 'All Genres'\n      }].concat(_toConsumableArray(getGenres()));\n      this.setState({\n        movies: getMovies(),\n        genres: genres\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          pageSize = _this$state2.pageSize,\n          currentPage = _this$state2.currentPage,\n          genres = _this$state2.genres,\n          selectedGenre = _this$state2.selectedGenre,\n          sortColumn = _this$state2.sortColumn;\n      if (this.state.movies.length === 0) return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"There are no movies in the database\");\n\n      var _this$getPagedData = this.getPagedData(),\n          totalCount = _this$getPagedData.totalCount,\n          movies = _this$getPagedData.data;\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        items: genres,\n        selectedItem: selectedGenre,\n        onItemSelect: this.handleGenreSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/movies/new\",\n        className: \"btn btn-primary\",\n        style: {\n          marginBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \" New Movie \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Showing \", totalCount, \" movies in the database.\"), React.createElement(SearchBox, {\n        value: searchQuery,\n        onChange: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(MoviesTable, {\n        movies: movies,\n        sortColumn: sortColumn,\n        onDelete: this.handleDelete,\n        onLike: this.handleLike,\n        onSort: this.handleSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(Pagination, {\n        itemsCount: totalCount,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        onPageChange: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nexport default Movies;","map":{"version":3,"sources":["/Users/tcc-jean/sites/study/react/vidly/src/components/movies.jsx"],"names":["React","Component","Link","getMovies","deleteMovie","MoviesTable","Pagination","ListGroup","paginate","getGenres","_","SearchBox","Movies","state","movies","genres","pageSize","currentPage","selectedGenre","searchQuery","sortColumn","path","order","handleDelete","id","deletedMovie","setState","movie","handleLike","map","_id","liked","handlePageChange","page","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","filter","m","sorted","orderBy","totalCount","length","data","name","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getMovies, deleteMovie } from \"../services/fakeMovieService\";\nimport MoviesTable from './moviesTable'\nimport Pagination from \"./common/pagination\"\nimport ListGroup from \"./common/listGroup\"\nimport { paginate } from '../utils/paginate'\nimport { getGenres } from '../services/fakeGenreService';\nimport _ from 'lodash'\nimport SearchBox from './searchBox'\n\n\nclass Movies extends Component {\n    state = {\n        movies: [],\n        genres: [],\n        pageSize: 4,\n        currentPage: 1,\n        selectedGenre: '',\n        searchQuery: '',\n        sortColumn: {\n            path: 'title',\n            order: 'asc'\n        }\n    }\n\n    componentDidMount() {\n        const genres = [ { _id: '' ,name: 'All Genres'}, ...getGenres() ]\n\n        this.setState({\n            movies: getMovies(),\n            genres\n        })\n    }\n\n    handleDelete = id => {\n        const deletedMovie = deleteMovie(id)\n\n        this.setState({\n            movie: deletedMovie\n        })\n    }\n\n    handleLike = id => {\n        const movies = this.state.movies.map(movie =>\n            movie._id === id\n                ? { ...movie, liked: !movie.liked }\n                : movie\n        )\n\n        this.setState({\n            movies\n        })\n    }\n\n    handlePageChange = page => {\n        this.setState({ currentPage: page })\n    }\n\n    handleGenreSelect = genre => {\n        this.setState({\n            selectedGenre: genre,\n            searchQuery: \"\",\n            currentPage: 1\n        })\n    }\n\n    handleSearch = query => {\n        this.setState({\n            selectedGenre: null,\n            searchQuery: query,\n            currentPage: 1\n        })\n    }\n\n    handleSort = sortColumn => {\n        this.setState({ sortColumn })\n    }\n\n    getPagedData = () => {\n\n        const { \n            movies: allMovies, \n            pageSize, \n            currentPage, \n            selectedGenre, \n            sortColumn \n        } = this.state\n\n        const filtered = selectedGenre && selectedGenre._id\n        ? allMovies.filter( m => m.genre._id === selectedGenre._id ) \n        : allMovies\n\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order])    \n\n        const movies = paginate(sorted, currentPage, pageSize)\n\n        return { totalCount: filtered.length, data: movies }\n    }\n\n    render() {\n\n        const { \n            pageSize, \n            currentPage, \n            genres, \n            selectedGenre, \n            sortColumn \n        } = this.state\n\n        if (this.state.movies.length === 0) return <h2>There are no movies in the database</h2>\n\n        const { totalCount, data: movies } = this.getPagedData()\n\n        return (\n            <div className='row'>\n                <div className=\"col-3\">\n                    <ListGroup \n                        items={genres} \n                        selectedItem={ selectedGenre }\n                        onItemSelect={this.handleGenreSelect}\n                        />\n                </div>\n                <div className=\"col\">\n                    <Link to='/movies/new' className='btn btn-primary' style={{ marginBottom: 20 }}> New Movie </Link>\n                    <h2>Showing {totalCount} movies in the database.</h2>\n                    <SearchBox value={ searchQuery } onChange={ this.handleSearch } /> \n                    <MoviesTable \n                        movies={ movies } \n                        sortColumn={ sortColumn }\n                        onDelete={ this.handleDelete }    \n                        onLike={ this.handleLike }    \n                        onSort={ this.handleSort }\n                    />\n                    <Pagination\n                        itemsCount={totalCount}\n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                        onPageChange={this.handlePageChange}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}